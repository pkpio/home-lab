#=================================================
# Contextual lights:
# Scripts to turn lights on smoothly using different
# intial behaviours based on context (such as time)
#=================================================

##################   Turn on smart   ##################
lights_on_smart:
  alias: Lights on with smart transition
  icon: mdi:lightbulb-on
  mode: queued
  fields:
    entity_id:
      description: 'Entity id of the light to interact on'
      example: light.corridor_lights
  sequence:
  - service_template: >
      {% if is_state(input_boolean.contextual_lights, 'on') %}
        script.lights_on_smart_with_context
      {% else %}
        script.lights_on_smart_no_context
      {% endif %}
    data_template:
      entity_id: "{{ entity_id }}"

lights_on_smart_no_context:
  alias: Lights on with smart without context
  icon: mdi:lightbulb-on
  mode: queued
  fields:
    entity_id:
      description: 'Entity id of the light to interact on'
      example: light.corridor_lights
  sequence:
  - service: light.turn_on
    data_template:
      entity_id: "{{ entity_id }}"
      brightness: 255
      transition: 2

lights_on_smart_with_context:
  alias: Lights on with smart with context
  icon: mdi:lightbulb-on
  mode: queued
  fields:
    entity_id:
      description: 'Entity id of the light to interact on'
      example: light.corridor_lights
  sequence:
  - service: light.turn_on
    data_template:
      entity_id: "{{ entity_id }}"
      brightness: >-
        {% if is_state(entity_id, 'on') and state_attr(entity_id, 'brightness') | int > states('input_number.contextual_start_brightness') | int %}
          {{ state_attr(entity_id, 'brightness') | int }}
        {% else %}
          {{ states('input_number.contextual_start_brightness') | int }}
        {% endif %}
      color_temp: "{{ states('input_number.contextual_color_temperature') | int }}"
      transition: 2
  - delay:
      seconds: 2
  - service: light.turn_on
    data_template:
      entity_id: "{{ entity_id }}"
      brightness: "{{ states('input_number.contextual_final_brightness') | int }}"
      transition: "{{ states('input_number.contextual_transition_time') | int }}"

##################   Toggle smart   ##################
lights_toggle_smart:
  alias: Lights toggle with smart transition
  icon: mdi:toggle-switch
  mode: queued
  fields:
    entity_id:
      description: 'Entity id of the light to interact on'
      example: light.corridor_lights
  sequence:
  - service_template: >
      {% if is_state(entity_id, 'on') %}
        light.turn_off
      {% else %}
        script.lights_on_smart
      {% endif %}
    data_template:
      entity_id: "{{ entity_id }}"
